PROVA DA TERÇA QUE VEM

FILA
- aprender a criar e manipular filas com vetores dinamicos

filas são TAD que permitem a inserção e remoção de elementos, mais especificamente uma fila segue a regra
FIFO - First in, First Out --- sempre que houver remoção, o elemento a remover será o mais antigo ou o primeiro que foi inserido na estrutura

fila é um vetor - pode ser um alista (vai ver depois) 
quando chega um elemento, ele entra na primeira casa. O seguinte elemento, entra na segunda. O seguinte, na terceira....
quando chama o primeiro, você o remove e poderia passar todos uma casa para frente, mas, na fila, voce exclui a primeira casa

flags - indicam onde está tal elemento 

0       1      2       3     4       5
              222    333    444     555
               s             q       t

a flag "s" indica o inicio da fila e o "t" indica o final da fila --- (t-s) + 1
pode ter mais de uma flag - por exemplo, podemos calcular (q-s) + 1 para saber o tamanho de outra parte da fila


0       1      2       3     4       
       111    222    333    444    
        s                    t      

caso t = s --- só temos um elemento
caso t < s, não há elementos na fila 

0     1       2       3        4      5
                     555      777    888
                      s               t
se o vetor fosse estático, não poderiamos adicionar mais nada mas, como há memoria dinamica, conforme avançamos, poderiamos dar malloc 
nisso, daria um problema porque haveria muito desperdicio de memoria 
por isso, há o conceito de fila circular

0     1       2       3        4      5        6    7    8      9
                     555      777    888      
                      s                        t               N -1

nesse caso, o tamanho (ou numero de elemntos da fila) é t -s
N é a capacidade maxima
s == t -> fila vzia        t == N -> fila cheia 

insert:                      fila[t++] = y;                           sempre e quando t < N
remove:                      x = fila[s++];                           sempre e quando s < t (fila não vazia)
procurar dentro da fila:     for (i = s; i < t && x != fila[i]; i++)  se achou x: s <= i < t             se não achou: i = t

0      1      2      3      4      5      6      ...      N-1
                    453    678    435    111              456
quero adicionar o valor 222, mas não tem mais espaço no vetor

0      1      2      3      4      5      6      ...      N-1
222                 453    678    435    111              456
voce pode decidir que a ultima que vc preencher (no caso 1 - deixando uma casa vazia entre o primeiro antigo do ultimo novo) fica vazia - professor recomendou isso 
      a condição fica bem clara quando está cheia 

0      1      2      3      4      5      6      ...      N-1
222    342   349           453    678    111              456
                            t       s

nesse caso, precisamos ter uma nova flag indicando? Não, porque ocupa muita memoria

e se eu quiser adicionar mais um numero? (098)
infelizmente, precisamos fazer um realloc 

                                                                  vira uma nova ultima casa
0      1      2      3      4      5      6      ...      N-1       N
342   349    098           453    678    111              456      222
              (!)                                                realocou! saiu da casa 0
vai passando e, conforme vai passando, aumenta uma memoria ali no fundo e, o que vinha depois, passa uma casa para frente 
      note que o espaço na casa 3 fica em branco e começa a partir da 4

EXERCICIOS E ANOTAÇÕES NO TABLET









