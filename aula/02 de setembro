Algoritmo - procedimento computacional bem definido para resolver um problema

              /-> Algoritmo 1 ->\
Input (entrada)                  output (saída)
              \-> Algoritmo 2 ->/

Algoritmos diferentes podem diferenciar em: tempo de respostas, memoria ocupada, como o algoritmo trabalha (numero de linhas, caminhos, etc)
  --> isso de chama métricas - as formas diferentes de fazer um algoritmo
    --> algumas podem ser mais gerais do que outras 
matematicamente, somos capazes de ver a dificuldade de um algoritmo
   --> o que diz se um algoritmo é melhor ou pior é o curso computacional, visto matematicamente

https://sorting-algorithm-jet.vercel.app/select%20algorithm
   ---> esse site mostra a diferença de tempo entre cada tipo diferente de "sorting" - todos funcionam, mas uns são mais rapidos

algoritmos que não tem soluções são chamados de NP-difíceis (não polinomiais, porque o polinomial são os solucionáveis)
   --> normalmente problemas de otimização, que não possuem solução exata

**CLASSE O

Definição formal:
O(g(n)) = {f(n)} --> existem constantes positivas c e n0 tais que 0 <= f(n) <= cg(n), para todo n >= n0)
Informalmente, dizemos que f(n) pertence a O(g(n)), então f(n) cresce no maximo tão rapido quato g(n)
   --> conforme aumenta, a distancia continua sempre a mesma, apesar de parecer diminuir - crescem na mesma proporção 
       (como dar um zoom com a camera - continua parado, mas parece estar diminuindo) 

log(n) (n elevado a 0,75) é muito mais rapido que n (n elevado a 1)
2 elevado a n é o mais alto - o pior é n! (fatorial)

log(n) < n < n . log(n) < n elevado a 2 = 100 n elevado a 2 + 15n < 2 elevado a n < n!  ---> depois do n elevado a 2 é muito tempo
portanto, log(n) é o melhor de todos - menor tempo de processamento













